name: Testing and Building PostgreSQL-Backup container

on:
  push:
    tags:
      - "v*.*.*"
env:
  DOCKERHUB_USERNAME: simple2b
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  PROJECT_IMAGE: simple2b/pg-backup

jobs:
  tests:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.11]
        poetry-version: [1.5.1]
        os: [Linux]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3.5.2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.3.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          poetry install
      - name: Lint with flake8
        run: |
          poetry run flake8 . --count --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11]
        poetry-version: [1.5.1]
        os: [Linux]
    runs-on: ${{ matrix.os }}
    # if: github.ref == 'refs/heads/develop'
    needs: tests
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker meta
        id: project_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.PROJECT_IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: "linux/amd64,linux/arm64"
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build and Push pg-backup image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.project_meta.outputs.tags }}
          labels: ${{ steps.project_meta.outputs.labels }}
